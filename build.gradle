buildscript {
    repositories {
        mavenCentral()
            maven {
                name = "forge"
                    url = "http://files.minecraftforge.net/maven"
            }
        maven {
            name = "sonatype"
                url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}


repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
            url "http://mobiusstrip.eu/maven"
    }
    maven { // the repo from which to get NEI and stuff
        name 'CB Repo'
            url "http://chickenbones.net/maven/"
    }
    maven {
        name = "ic2"
            url = "http://maven.ic2.player.to/"
    }
    maven {
        name "K4Repo"
        url "http://maven.k-4u.nl"
    }
}


apply plugin: 'forge'

dependencies {
    compile "codechicken:CodeChickenLib:1.7.10-1.1.1.95:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.2.11:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.2.26:dev"
    compile "codechicken:ForgeMultipart:1.7.10-1.1.0.297:dev"
    compile "mcp.mobius.waila:Waila:1.5.3_1.7.10"
    compile 'com.mod-buildcraft:buildcraft:6.0.17:dev'
    compile 'net.industrial-craft:industrialcraft-2:2.2.504-experimental:api'
    compile "pneumaticCraft:PneumaticCraft-1.7.10:1.2.9-24:userdev"
    compile "k4unl:k4lib:1.7.10-0.1.35:deobf"
}

project.ext {
    buildNum = System.getenv("BUILD_NUMBER")
    mcVersion = "1.7.10"
}

version = project.ext.mcVersion + "-2.0." + project.ext.buildNum
group= "k4unl" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "HydCraft"

minecraft {
    version = "${project.ext.mcVersion}-10.13.0.1180"

    // replacing stuff in the source
    replace '@VERSION@', project.version
    replace '@MC_VERSION@', version
    replace '@BUILD_NUMBER@', project.ext.buildNum
}


// configure the source folders
sourceSets {
    main {
        java {
            srcDir 'java'
                // exclude 'some exclusion'
                // include 'some inclusion'
        }
        resources {
            srcDir 'resources'
            exclude '**/.md' // exclude readme from localization repo
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
    }
    api {
        java {
            srcDir 'api'
        }
    }

}


processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "buildNum", project.ext.buildNum
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

            // replace version and mcversion
            expand 'version':project.version, 'mcversion':project.minecraft.version, 'buildNum':project.ext.buildNum
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    //This makes sure that it gets run EVERY time
    outputs.upToDateWhen {false}
}


jar {
    classifier = "universal"
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output) {
        classifier = "deobf"
    }
}

// Create API library zip
task apiZip(type: Zip) {
    from(sourceSets.main.java){
        include 'k4unl/minecraft/Hydraulicraft/api/**'

        destinationDir = file 'output'

        classifier = "api"
    }
}

apiZip.mustRunAfter deobfJar


artifacts {
    archives deobfJar
    archives apiZip
}

task("uploadJars", dependsOn:"reobf") {
    description = "uploads JARs"
    if (System.getenv("local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("local_maven"))
                    pom {
                        groupId = project.group
                        version = project.version
                        artifactId = project.archivesBaseName
                        project {
                            name project.archivesBaseName
                            packaging 'jar'
                            description 'Hydraulicraft'
                            url 'http://Hydraulicrat.eu'
                            scm {
                                url 'https://github.com/K-4U/Hydraulicraft'
                                connection 'scm:git:git@github.com:K-4U/Hydraulicraft.git'
                                developerConnection 'scm:git:git@github.com:K-4U/Hydraulicraft.git'
                            }
                            issueManagement {
                                system 'github'
                                url 'https://github.com/K-4U/Hydraulicraft/issues'
                            }
                            licenses {
                                license {
                                    name 'GPLv3'
                                    url 'https://github.com/K-4U/Hydraulicraft/blob/master/LICENSE'
                                    distribution 'repo'
                                }
                            }
                            developers {
                                developer {
                                    id 'K4Unl'
                                    name 'K4Unl'
                                    roles { role 'developer' }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
